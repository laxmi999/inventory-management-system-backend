/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export interface Inventory {
  created_at: Generated<string>;
  id: Generated<number>;
  location: string | null;
  product_id: number;
  sku: number;
  updated_at: Generated<string>;
}

export interface Product {
  created_at: Generated<string>;
  description: string | null;
  id: Generated<number>;
  image_link: string;
  price: Numeric;
  product_name: string;
  updated_at: Generated<string>;
}

export interface ProductSupplier {
  created_at: Generated<string>;
  id: Generated<number>;
  product_id: number;
  supplier_id: number;
  updated_at: Generated<string>;
}

export interface Supplier {
  created_at: Generated<string>;
  id: Generated<number>;
  name: string;
  supplier_contact: string;
  updated_at: Generated<string>;
}

export interface Transaction {
  cancel_reason: string | null;
  created_at: Generated<string>;
  description: string;
  id: Generated<number>;
  is_cancelled: boolean | null;
  product_id: number;
  quantity: number;
  type: string;
  updated_at: Generated<string>;
  user_id: number;
}

export interface User {
  contact_no: string;
  created_at: Generated<string>;
  email: string;
  full_name: string;
  id: Generated<number>;
  password_hash: string;
  role: string;
  updated_at: Generated<string>;
  username: string;
}

export interface DB {
  inventory: Inventory;
  product: Product;
  product_supplier: ProductSupplier;
  supplier: Supplier;
  transaction: Transaction;
  user: User;
}
