/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export interface Inventory {
  createdAt: Generated<string>;
  id: number;
  location: string | null;
  productId: number;
  sku: number;
  updatedAt: Generated<string>;
}

export interface Product {
  createdAt: Generated<string>;
  description: string | null;
  id: number;
  imageLink: string;
  name: string;
  price: Numeric;
  updatedAt: Generated<string>;
}

export interface ProductSupplier {
  createdAt: Generated<string>;
  id: number;
  productId: number;
  supplierId: number;
  updatedAt: Generated<string>;
}

export interface Supplier {
  contactInfo: string;
  createdAt: Generated<string>;
  id: number;
  name: string;
  updatedAt: Generated<string>;
}

export interface Transaction {
  cancelReason: string | null;
  createdAt: Generated<string>;
  description: string;
  id: number;
  isCancelled: boolean | null;
  productId: number;
  quantity: number;
  type: string;
  updatedAt: Generated<string>;
  userId: number;
}

export interface User {
  createdAt: Generated<string>;
  email: string;
  id: number;
  passwordHash: string;
  role: string;
  updatedAt: Generated<string>;
  userName: string;
}

export interface DB {
  inventory: Inventory;
  product: Product;
  productSupplier: ProductSupplier;
  supplier: Supplier;
  transaction: Transaction;
  user: User;
}
